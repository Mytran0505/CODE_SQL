DROP DATABASE QLPHONGKHAM
CREATE DATABASE QLPHONGKHAM

USE QLPHONGKHAM

CREATE TABLE PHONGKHAM
(
	MAPK VARCHAR(5) CONSTRAINT PK_PK PRIMARY KEY,
	TENPK VARCHAR(50),
	MABS VARCHAR(5) NULL
)

CREATE TABLE BENHNHAN 
(
	MABN VARCHAR(5) CONSTRAINT PK_BN PRIMARY KEY,
	TENBN VARCHAR(50),
	NGSINH SMALLDATETIME,
	DT VARCHAR(50),
	GIOITINH VARCHAR(50)
)

CREATE TABLE BACSY
(
	MABS VARCHAR(5) CONSTRAINT PK_BS PRIMARY KEY,
	TENBS VARCHAR(50) NOT NULL,
	MAPK VARCHAR(5) NULL
)

CREATE TABLE KHAMBENH
(
	MAKB VARCHAR(5) CONSTRAINT PK_KB PRIMARY KEY,
	MABN VARCHAR(5),
	MABS VARCHAR(5),
	NGKHAM SMALLDATETIME,
	KETLUAN VARCHAR(50)
)

ALTER TABLE PHONGKHAM
ADD CONSTRAINT Fk_PK_BS FOREIGN KEY (MABS) REFERENCES BACSY(MABS)

ALTER TABLE KHAMBENH
ADD CONSTRAINT Fk_KB_BN FOREIGN KEY (MABN) REFERENCES BENHNHAN(MABN)

ALTER TABLE KHAMBENH
ADD CONSTRAINT Fk_KB_BS FOREIGN KEY (MABS) REFERENCES BACSY(MABS)

ALTER TABLE BACSY
ADD CONSTRAINT Fk_BS_PK FOREIGN KEY (MAPK) REFERENCES PHONGKHAM(MAPK)

ALTER TABLE BENHNHAN
ADD CONSTRAINT KT_BN_GT CHECK (GIOITINH IN ('NAM','NU'))

SET DATEFORMAT DMY

INSERT INTO PHONGKHAM VALUES ('PK01', 'HCM', 'BS01')
INSERT INTO PHONGKHAM VALUES ('PK02', 'Binh Duong', 'BS02')
INSERT INTO PHONGKHAM VALUES ('PK03', 'Dong Nai', 'BS03')

INSERT INTO BENHNHAN VALUES ('BN01', 'Nguyen Van A', '02/03/1984', '001122334', 'nam')
INSERT INTO BENHNHAN VALUES ('BN02', 'Tran Van B', '04/01/1985', '002211334', 'nam')
INSERT INTO BENHNHAN VALUES ('BN03', 'Huynh Thi C', '24/12/1986', '331122004', 'nu')

INSERT INTO BACSY VALUES ('BS01', 'Ngo Tien Sy', 'PK01')
INSERT INTO BACSY VALUES ('BS02', 'Dinh Cong Trang', 'PK02')
INSERT INTO BACSY VALUES ('BS03', 'Trinh My Ngoc', 'PK03')
INSERT INTO BACSY VALUES ('BS05', 'Trinh My Ngoc', 'PK03')

INSERT INTO KHAMBENH VALUES ('KB01', 'BN01', 'BS01', '01/01/2019', 'Viem phe quan')
INSERT INTO KHAMBENH VALUES ('KB02', 'BN02', 'BS02', '22/12/2018', 'Thieu mau nao')
INSERT INTO KHAMBENH VALUES ('KB03', 'BN03', 'BS01', '03/04/2019', 'Thoat vi dia dem')

--3. Hiện thực ràng buộc toàn vẹn sau: bác sỹ làm trưởng phòng khám nào thì phải làm việc tại 
--phòng khám đó (2đ).
--TRIGGER ON PHONGKHAM
CREATE TRIGGER TRIGGER_INSERT_UPDATE_PK ON PHONGKHAM
FOR INSERT, UPDATE
AS
BEGIN
	DECLARE @MAPK_TP VARCHAR(5), @MAPK VARCHAR(5)

	SELECT @MAPK=PK.MAPK, @MAPK_TP=BS.MAPK
	FROM INSERTED PK, BACSY BS
	WHERE PK.MABS=BS.MABS

	IF(@MAPK!=@MAPK_TP)
		BEGIN
			PRINT 'ERROR!'
			ROLLBACK TRAN
		END
	ELSE
		PRINT 'THANH CONG'
END

CREATE TRIGGER TRIGGER_UPDATE_BS ON BACSY
FOR UPDATE
AS
BEGIN
	IF EXISTS (SELECT *
			   FROM INSERTED BS, PHONGKHAM PK
			   WHERE BS.MABS=PK.MABS AND BS.MAPK!=PK.MAPK)
		BEGIN
			PRINT 'ERROR!'
			ROLLBACK TRAN
		END
	ELSE
		PRINT 'THANH CONG'
END
UPDATE BACSY
SET MAPK='PK01'
WHERE MABS='BS03'
INSERT INTO BACSY VALUES ('BS04', 'Trinh My Ngoc', 'PK04')
INSERT INTO PHONGKHAM VALUES ('PK04', 'Dong Nai', NULL)
UPDATE PHONGKHAM
SET MABS='BS04'
WHERE MAPK='PK04'
--4. Tìm các bệnh nhân đã ở từng khám bệnh bởi bác sỹ ‘Dinh Cong Trang’ vào tháng 12 năm 
--2018 (TENBN, DT). (1đ)
SELECT TENBN,DT
FROM BENHNHAN BN, KHAMBENH KB, BACSY BS
WHERE BN.MABN=KB.MABN AND KB.MABS=BS.MABS
      AND TENBS='Dinh Cong Trang' AND MONTH(NGKHAM)=12 AND YEAR(NGKHAM)=2018
--5. Tìm phòng khám có nhiều lượt bệnh nhân đến khám nhất năm 2018 (MAPK, SOLUOTKHAM).
--(1đ)
SELECT TOP 1 PK.MAPK, COUNT(KB.MAKB) AS SOLUOTKHAM
FROM PHONGKHAM PK, KHAMBENH KB, BACSY BS
WHERE PK.MAPK=BS.MAPK AND BS.MABS=KB.MABS AND YEAR(NGKHAM)=2018
GROUP BY PK.MAPK
ORDER BY COUNT(KB.MAKB) DESC

SELECT TOP 1 WITH TIES PK.MAPK, COUNT(KB.MAKB) AS SOLUOTKHAM
FROM PHONGKHAM PK, KHAMBENH KB, BACSY BS
WHERE PK.MAPK=BS.MAPK AND BS.MABS=KB.MABS AND YEAR(NGKHAM)=2018
GROUP BY PK.MAPK
ORDER BY COUNT(KB.MAKB) DESC

UPDATE KHAMBENH
SET NGKHAM='03/04/2019'
WHERE MAKB='KB03'

SELECT PK.MAPK, COUNT(KB.MAKB) AS SOLUOTKHAM
FROM PHONGKHAM PK, KHAMBENH KB, BACSY BS
WHERE PK.MAPK=BS.MAPK AND BS.MABS=KB.MABS AND YEAR(NGKHAM)=2018
GROUP BY PK.MAPK
HAVING COUNT(KB.MAKB) >=ALL (	SELECT COUNT(KB.MAKB)
								FROM PHONGKHAM PK, KHAMBENH KB, BACSY BS
								WHERE PK.MAPK=BS.MAPK AND BS.MABS=KB.MABS AND YEAR(NGKHAM)=2018
								GROUP BY PK.MAPK)
--(Chỉ cần tìm 1 phòng khám, không cần liệt kê tất cả các phòng có cùng số lượt khám cao nhất) 
--6. Liệt kê các phòng khám và những người đã từng khám ở đó (nếu có) (MAPK, TENPK, TENBN).
--(1đ).
SELECT PK.MAPK, TENPK, TENBN
FROM (((BENHNHAN BN
JOIN KHAMBENH KB ON KB.MABN=BN.MABN)
JOIN BACSY BS ON BS.MABS=KB.MABS)
RIGHT JOIN PHONGKHAM PK ON PK.MAPK=BS.MAPK)

SELECT A.MAPK, A.TENPK, B.TENBN
FROM
	(SELECT * FROM PHONGKHAM) AS A
LEFT JOIN
	(SELECT K.MABN, PK.MAPK, BN.TENBN
	FROM PHONGKHAM PK, BACSY BS, KHAMBENH K, BENHNHAN BN
	WHERE PK.MAPK = BS.MAPK AND BS.MABS = K.MABS AND K.MABN = BN.MABN) AS B
ON A.MAPK = B.MAPK

--7. Tìm các bệnh nhân đã từng khám ở tất cả các phòng khám (MABN, TENBN) (1đ).
SELECT BN.MABN, TENBN
FROM BENHNHAN BN
WHERE NOT EXISTS (SELECT *
				  FROM PHONGKHAM PK, BACSY BS
				  WHERE PK.MAPK=BS.MAPK
					    AND NOT EXISTS (SELECT *
										FROM KHAMBENH KB
										WHERE KB.MABS=BS.MABS AND KB.MABN=BN.MABN))
SELECT BN.MABN, TENBN
FROM BENHNHAN BN
WHERE NOT EXISTS (SELECT *
				  FROM PHONGKHAM PK
				  WHERE  NOT EXISTS (SELECT *
										FROM KHAMBENH KB, BACSY BS
										WHERE KB.MABS=BS.MABS AND KB.MABN=BN.MABN
										AND PK.MAPK=BS.MAPK
					    ))